start scope
scope-app --mode app --probe.docker=true --no-probe --app.window 8760h

1.demo.json
=========================
format, template


2. client code reading
==============================
scope/
client/app/scripts/components/app.js
client/app/scripts/actions/app-actions.js

client/app/scripts/components/topologies.js
client/app/scripts/components/nodes.js


client/app/scripts/hoc/metric-feeder.js

client/app/scripts/reducers/root.js  code蛮多 还没看完。

http://192.168.0.113:4040/#!/state/{"controlPipe":null,"topologyViewMode":"grid",
"nodeDetails":[],"pinnedMetricType":null,"pinnedSearches":[],"searchQuery":"",
"selectedNodeId":null,"gridSortedBy":null,"gridSortedDesc":null,"topologyId":"containers",
"topologyOptions":{"processes":{"unconnected":"hide"},
"containers":{"system":"application","stopped":"running","pseudo":"hide"}}}


3. Use existing Json data to render Scope UI
===================================================
a) start Scope --no-probe
./scope launch --mode app --probe.docker=true --no-probe --app.window 8760h

b) import JSON data via API using Curl command
curl -X POST -H "Content-Type: application/json" http://192.168.0.113:4040/api/report -d @/home/hzhang/git/scope/docker/demo.json
curl -X POST -H "Content-Type: application/json" http://192.168.255.97:4040/api/report -d @/home/hzhang/git/scope/docker/demo.json

or
b2) Publish a fixed report.
/home/hzhang/git/fixprobe/main.go
go run main.go -fixture /home/hzhang/git/scope/docker/demo.json

/home/hzhang/git/scope/client/package.json
"scripts": {
  "build": "webpack --config webpack.production.config.js",
  "build-external": "EXTERNAL=true webpack --config webpack.production.config.js",
  "copy-pkg-files": "cp package.json build-pkg/ && cp -R app/styles build-pkg/",
  "build-pkg": "mkdir -p build-pkg && node node_modules/.bin/babel app/scripts --ignore __tests__ --out-dir build-pkg && npm run copy-pkg-files",
  "bundle": "npm run build-pkg && npm pack ./build-pkg && mv weave-scope-$npm_package_version.tgz ./tmp/weave-scope.tgz",
  "start": "node server.js",
  "start-production": "NODE_ENV=production node server.js",
  "noprobe": "../scope stop && ../scope launch --no-probe --app.window 8760h",
  "loadreport": "npm run noprobe && sleep 1 && curl -X POST -H \"Content-Type: application/json\" http://$BACKEND_HOST/api/report -d"
}

===============================
4. insert data into influxdb
===============================
influx CLI
influx -precision rfc3339
> create database "canal-monitoring"
> use "canal-monitoring"
语法:"INSERT <measurement>,[tag]=[value],[tag2]=[value2] field1=value3,field2=value4
> insert ep_stats,dstIP=178782216,protocol=1,srcIP=178782218,ip=10.168.0.10,name=isolation-1-wrmtn bytes=420906795008,packets=1
curl -i XPOST 'http://localhost:8086/write?db=canal-monitoring' --data-binary @canal.txt
curl -i XPOST 'http://localhost:8086/write?db=canal-monitoring' --data-binary @cpu_data.txt
